{"version":3,"sources":["components/FeedbackOpt/Feedback.module.css","components/Section/Section.module.css","components/FeedbackOpt/FeedbackElems.jsx","components/Notification/Notification.jsx","components/Statistics/Statistic.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackElems","options","func","className","s","list","map","id","value","listItem","onClick","type","Notification","message","Statistic","good","neutral","bad","total","percentage","Section","title","child","section","Feedback","useState","setGood","setNeutral","setBad","totalClicks","data","e","state","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,6B,gBCA3DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,+QCGvDC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OACpB,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,oBAAIL,UAAWC,IAAEK,SAAmBC,QAAS,kBAAMR,EAAKM,IAAxD,SACE,wBAAQG,KAAK,SAAb,SAAuBH,KADOD,S,OCLzBK,MAHf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KCoBCC,MAnBf,YAA+D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9C,OACE,mCACGD,EAAQ,EACP,8BACE,+BACE,yCAAuBH,EAAvB,MAAQ,QACR,2CAAyBC,IAAjB,QACR,uCAAqBC,IAAb,QACR,yCAAuBC,IAAf,QACR,qDAAmCC,EAAnC,MAAQ,aAIZ,cAAC,EAAD,CAAcN,QAAQ,oE,gBCdxBO,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACxB,OACE,0BAASnB,UAAWC,IAAEmB,QAAtB,UACE,oBAAIpB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACxBC,MCAQ,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOR,EAAP,KAAYW,EAAZ,KA6BMC,EAAc,WAElB,OADcd,EAAOC,EAAUC,GAQjC,OACE,qCACE,cAAC,EAAD,CACEI,MAAM,6BACNC,MAAO,cAAC,EAAD,CAAerB,QAAS6B,EAAM5B,KAxCnB,SAAC6B,GAGvB,OAAQA,GACN,IAAK,OACHL,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,WA+B5B,cAAC,EAAD,CACEX,MAAM,aACNC,MACE,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,WAjBOc,KAAKC,MAAOnB,EAAOc,IAAiB,YChCxCM,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAACqB,EAAD,OCDNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.78c8408d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__WQ-1Q\",\"listItem\":\"Feedback_listItem__1mb55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","import React from \"react\";\nimport s from \"../FeedbackOpt/Feedback.module.css\";\n\n//import PropTypes from \"prop-types\";\nconst FeedbackElems = ({ options, func }) => (\n  <ul className={s.list}>\n    {options.map(({ id, value }) => {\n      return (\n        <li className={s.listItem} key={id} onClick={() => func(value)}>\n          <button type=\"button\">{value}</button>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport { FeedbackElems };\n","function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"../Notification/Notification\";\nfunction Statistic({ good, neutral, bad, total, percentage }) {\n  return (\n    <>\n      {total > 0 ? (\n        <div>\n          <ul>\n            <li key=\"id-1\"> Good: {good} </li>\n            <li key=\"id-2\">Neutral: {neutral}</li>\n            <li key=\"id-3\">Bad: {bad}</li>\n            <li key=\"id-4\">Total: {total}</li>\n            <li key=\"id-5\">Positive Feedback: {percentage}%</li>\n          </ul>\n        </div>\n      ) : (\n        <Notification message=\"No feedback given 🤷🏼‍♀️\" />\n      )}\n    </>\n  );\n}\nexport default Statistic;\n","import React from \"react\";\nimport s from \"../Section/Section.module.css\";\nconst Section = ({ title, child }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {child}\n    </section>\n  );\n};\nexport { Section };\n","import { useState } from \"react\";\nimport { FeedbackElems } from \"../FeedbackOpt/FeedbackElems\";\nimport data from \"../data/feedbackData.json\";\nimport Statistic from \"../Statistics/Statistic\";\nimport { Section } from \"../Section/Section\";\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = (e) => {\n    //const key = e.target.id;\n    // console.log(key);\n    switch (e) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n      default:\n        break;\n    }\n  };\n  // const handleGoodIncrement = () => {\n  //   setGood((state) => state + 1);\n  // };\n  // const handleNeutralIncrement = () => {\n  //   setNeutral((state) => state + 1);\n  // };\n  // const handleBadIncrement = () => {\n  //   setBad((state) => state + 1);\n  // };\n\n  const totalClicks = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  function countPercentage() {\n    const result = Math.round((good / totalClicks()) * 100);\n    return result;\n  }\n  return (\n    <>\n      <Section\n        title=\"Please leave your feedback\"\n        child={<FeedbackElems options={data} func={handleIncrement} />}\n      ></Section>\n      <Section\n        title=\"Statistics\"\n        child={\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalClicks()}\n            percentage={countPercentage()}\n          />\n        }\n      ></Section>\n    </>\n  );\n}\n\n// class Feedback extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   handleIncrement = (option) => {\n//     this.setState({\n//       [option]: this.state[option] + 1,\n//     });\n//     //console.log(this.state);\n//   };\n//   countTotalFeedback() {\n//     const { good, neutral, bad } = this.state;\n//     const res = good + neutral + bad;\n//     //console.log(res);\n//     return res;\n//   }\n\n//   countPositiveFeedbackPercentage(total) {\n//     const { good } = this.state;\n//     const result = Math.round((good / total) * 100);\n//     return result;\n//   }\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const totalNum = this.countTotalFeedback();\n//     const percentage = this.countPositiveFeedbackPercentage(totalNum);\n//     //console.log(totalNum);\n//     return (\n//       <>\n//         <Section\n//           title=\"Please leave your feedback\"\n//           child={\n//             <FeedbackElems\n//               options={data}\n//               incrementFunc={this.handleIncrement}\n//             />\n//           }\n//         ></Section>\n//         <Section\n//           title=\"Statistics\"\n//           child={\n//             <Statistic\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={totalNum}\n//               percentage={percentage}\n//             />\n//           }\n//         ></Section>\n//       </>\n//     );\n//   }\n// }\n\n// export default Feedback;\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}