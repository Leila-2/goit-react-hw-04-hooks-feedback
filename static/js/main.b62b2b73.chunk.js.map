{"version":3,"sources":["components/FeedbackOpt/Feedback.module.css","components/Section/Section.module.css","components/FeedbackOpt/FeedbackElems.jsx","components/Notification/Notification.jsx","components/Statistics/Statistic.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackElems","options","incrementFunc","className","s","list","map","id","value","listItem","onClick","type","Notification","message","Statistic","good","neutral","bad","total","percentage","Section","title","child","section","Feedback","state","handleIncrement","option","setState","this","Math","round","totalNum","countTotalFeedback","countPositiveFeedbackPercentage","data","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,6B,gBCA3DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kTCGvDC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAZ,OACpB,oBAAIC,UAAWC,IAAEC,KAAjB,SACGJ,EAAQK,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,oBACEL,UAAWC,IAAEK,SAEbC,QAAS,kBAAMR,EAAcM,IAH/B,SAKE,wBAAQG,KAAK,SAAb,SAAuBH,KAHlBD,S,OCPAK,MAHf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KCoBCC,MAnBf,YAA+D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC9C,OACE,mCACGD,EAAQ,EACP,8BACE,+BACE,yCAAuBH,EAAvB,MAAQ,QACR,2CAAyBC,IAAjB,QACR,uCAAqBC,IAAb,QACR,yCAAuBC,IAAf,QACR,qDAAmCC,EAAnC,MAAQ,aAIZ,cAAC,EAAD,CAAcN,QAAQ,oE,gBCdxBO,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACxB,OACE,0BAASnB,UAAWC,IAAEmB,QAAtB,UACE,oBAAIpB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACxBC,MCDDE,E,4MACJC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,gBAAkB,SAACC,GACjB,EAAKC,SAAL,eACGD,EAAS,EAAKF,MAAME,GAAU,K,wDAInC,WACE,MAA+BE,KAAKJ,MAGpC,OAHA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,M,6CAMzB,SAAgCC,GAC9B,IAAQH,EAASc,KAAKJ,MAAdV,KAER,OADee,KAAKC,MAAOhB,EAAOG,EAAS,O,oBAI7C,WACE,MAA+BW,KAAKJ,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBe,EAAWH,KAAKI,qBAChBd,EAAaU,KAAKK,gCAAgCF,GAExD,OACE,qCACE,cAAC,EAAD,CACEX,MAAM,6BACNC,MACE,cAAC,EAAD,CACErB,QAASkC,EACTjC,cAAe2B,KAAKH,oBAI1B,cAAC,EAAD,CACEL,MAAM,aACNC,MACE,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,WAAYA,a,GAlDHiB,aA2DRZ,ICpDAa,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b62b2b73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__WQ-1Q\",\"listItem\":\"Feedback_listItem__1mb55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","import React from \"react\";\nimport s from \"../FeedbackOpt/Feedback.module.css\";\n\n//import PropTypes from \"prop-types\";\nconst FeedbackElems = ({ options, incrementFunc }) => (\n  <ul className={s.list}>\n    {options.map(({ id, value }) => {\n      return (\n        <li\n          className={s.listItem}\n          key={id}\n          onClick={() => incrementFunc(value)}\n        >\n          <button type=\"button\">{value}</button>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport { FeedbackElems };\n","function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"../Notification/Notification\";\nfunction Statistic({ good, neutral, bad, total, percentage }) {\n  return (\n    <>\n      {total > 0 ? (\n        <div>\n          <ul>\n            <li key=\"id-1\"> Good: {good} </li>\n            <li key=\"id-2\">Neutral: {neutral}</li>\n            <li key=\"id-3\">Bad: {bad}</li>\n            <li key=\"id-4\">Total: {total}</li>\n            <li key=\"id-5\">Positive Feedback: {percentage}%</li>\n          </ul>\n        </div>\n      ) : (\n        <Notification message=\"No feedback given 🤷🏼‍♀️\" />\n      )}\n    </>\n  );\n}\nexport default Statistic;\n","import React from \"react\";\nimport s from \"../Section/Section.module.css\";\nconst Section = ({ title, child }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {child}\n    </section>\n  );\n};\nexport { Section };\n","import React, { Component } from \"react\";\nimport { FeedbackElems } from \"../FeedbackOpt/FeedbackElems\";\nimport data from \"../data/feedbackData.json\";\nimport Statistic from \"../Statistics/Statistic\";\nimport { Section } from \"../Section/Section\";\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = (option) => {\n    this.setState({\n      [option]: this.state[option] + 1,\n    });\n    //console.log(this.state);\n  };\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const res = good + neutral + bad;\n    //console.log(res);\n    return res;\n  }\n\n  countPositiveFeedbackPercentage(total) {\n    const { good } = this.state;\n    const result = Math.round((good / total) * 100);\n    return result;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalNum = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage(totalNum);\n    //console.log(totalNum);\n    return (\n      <>\n        <Section\n          title=\"Please leave your feedback\"\n          child={\n            <FeedbackElems\n              options={data}\n              incrementFunc={this.handleIncrement}\n            />\n          }\n        ></Section>\n        <Section\n          title=\"Statistics\"\n          child={\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalNum}\n              percentage={percentage}\n            />\n          }\n        ></Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}